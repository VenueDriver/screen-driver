- service: api
  name: staging_deploy_serverless_api
  tag: staging
  command: serverless deploy --verbose --region us-east-1 --stage staging

- service: web
  name: staging_add_api_endpoint
  tag: staging
  command: bash -c "npm install && sed -i 's@API_HOST@'"$STAGING_API_ENDPOINT"'@' src/environments/environment.prod.ts && node_modules/.bin/ng build --prod --aot"

- service: awsdeployment
  name: staging_deploy_web
  encrypted_env_file: deployment.env.encrypted
  tag: staging
  command: bash -c "aws s3 sync /app-src/dist $AWS_S3_BUCKET_STAGING"

- service: kiosk
  name: staging_build_kiosk_app
  tag: staging
  command: bash -c "sed -i 's@API_HOST@'"$STAGING_API_ENDPOINT"'@' properties/app.properties && npm run win-installer"

- service: kiosk-deployment
  name: staging_deploy_kiosk_app
  encrypted_env_file: deployment.env.encrypted
  tag: staging
  command: bash -c "aws s3 sync /app-src/dist/ $AWS_S3_BUCKET_KIOSK_STAGING --exclude='win-unpacked/*'"

- service: api
  name: serverless_api_production
  tag: production
  command: serverless deploy --verbose --region us-east-1 --stage production

- service: web
  name: production_add_api_endpoint
  tag: production
  command: bash -c "npm install && sed -i 's@API_HOST@'"$PRODUCTION_API_ENDPOINT"'@' src/environments/environment.prod.ts && node_modules/.bin/ng build --prod --aot"

- service: awsdeployment
  name: production_deploy_web
  encrypted_env_file: deployment.env.encrypted
  tag: master
  command: bash -c "aws s3 sync /app-src/dist $AWS_S3_BUCKET_PRODUCTION"

- service: kiosk
  name: production_build_kiosk_app
  tag: staging
  command: bash -c "sed -i 's@API_HOST@'"$PRODUCTION_API_ENDPOINT"'@' properties/app.properties && npm run win-installer"

- service: kiosk-deployment
  name: production_deploy_kiosk_app
  encrypted_env_file: deployment.env.encrypted
  tag: staging
  command: bash -c "aws s3 sync /app-src/dist/ $AWS_S3_BUCKET_KIOSK_PRODUCTION --exclude='win-unpacked/*'"


# - service: kiosk
#   name: build_kiosk_exe
#   command: npm run win-installer
