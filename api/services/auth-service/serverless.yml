service: screen-driver-auth-api

frameworkVersion: ">=1.20.1 <2.0.0"

provider:
  name: aws
  runtime: nodejs6.10
  environment:
    STAGE: ${opt:stage}
    USERS_TABLE: ${self:service}-users-${opt:stage}
    USER_POOL: ${self:service}-userpool-${opt:stage}
    USER_POOL_ID:
      Ref: CognitoUserPool
    USER_POOL_CLIENT: ${self:service}-appclient-${opt:stage}
    USER_POOL_CLIENT_ID:
      Ref: CognitoAppClient
  iamRoleStatements:
    - Effect: Allow
      Action:
        - cognito-idp:*
      Resource: arn:aws:cognito-idp:*
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: arn:aws:dynamodb:${opt:region, self:provider.region}:*

custom:
  optionsMethod: ${file(./serverless/options-method-properties.yml)}
  restApiArn: ${file(./serverless/rest-api-arn.yml)}
  baseLambdaUri: ${file(./serverless/base-lambda-uri.yml)}
  cognitoResources: ${file(./serverless/cognito-resources.yml)}
  authenticateLambdaResources: ${file(./serverless/api-resources-for-authenticate-function.yml)}
  refreshTokenLambdaResources: ${file(./serverless/api-resources-for-refresh-token-function.yml)}
  signOutLambdaResources: ${file(./serverless/api-resources-for-sign-out-function.yml)}
  createUserLambdaResource: ${file(./serverless/api-resources-for-create-user-function.yml)}
  resources: ${file(./serverless/resources.yml)}
  restApiId:
    Fn::ImportValue: ScreenDriverRestApi-${opt:stage}
  rootUrlId:
    Fn::ImportValue: ScreenDriverRootApiResource-${opt:stage}

functions:
  authenticate:
    handler: src/auth/authenticator.handler

  sign_out:
    handler: src/auth/sign_out.handler

  refresh_token:
    handler: src/auth_token/auth_token.refresh

  create_user:
    handler: src/user/create.create

  get_users_list:
    handler: src/user/list.list
    events:
      - http:
          path: api/users
          method: get
          cors: true

  update_user:
    handler: src/user/update.update
    events:
      - http:
          path: api/users/{id}
          method: put
          cors: true

  change_user_password:
    handler: src/user/change-password.changePassword
    events:
      - http:
          path: api/change-password/
          method: post
          cors: true

resources:
  Resources: ${self:custom.resources}

plugins:
  - serverless-offline
  - serverless-export-env

package:
  include:
    - ../lib/**
  exclude:
    - serverless
    - .*
    - package*
